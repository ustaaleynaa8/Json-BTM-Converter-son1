{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ustaa/Desktop/converting-files-to-json-ccomb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from \"@angular/core\";\nimport { TxtToJsonService } from \"src/app/services/txt-to-json.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/csv-converter.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/services/txt-to-json.service\";\n\nfunction FileUploaderComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"h4\");\n    i0.ɵɵtext(2, \"Select File Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\")(4, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_5_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.fileType = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \" CSV \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"label\")(7, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_5_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.fileType = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \" TXT \");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.fileType)(\"disabled\", ctx_r0.isProcessing);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.fileType)(\"disabled\", ctx_r0.isProcessing);\n  }\n}\n\nfunction FileUploaderComponent_div_6_div_9_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r15 = ctx.index;\n    i0.ɵɵproperty(\"value\", i_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Field \", i_r15 + 1, \" \");\n  }\n}\n\nfunction FileUploaderComponent_div_6_div_9_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 29)(4, \"div\", 30)(5, \"label\", 14)(6, \"span\", 22);\n    i0.ɵɵtext(7, \"Start Position:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 31);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_div_9_div_12_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r16.fieldConfigs[ctx_r16.selectedFieldIndex].start = $event);\n    })(\"input\", function FileUploaderComponent_div_6_div_9_div_12_Template_input_input_8_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r18.onFieldConfigChange());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 30)(10, \"label\", 14)(11, \"span\", 22);\n    i0.ɵɵtext(12, \"Character Length:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 32);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_div_9_div_12_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r19.fieldConfigs[ctx_r19.selectedFieldIndex].length = $event);\n    })(\"input\", function FileUploaderComponent_div_6_div_9_div_12_Template_input_input_13_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r20 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r20.onFieldConfigChange());\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Field \", +ctx_r13.selectedFieldIndex + 1, \" Settings\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r13.fieldConfigs[ctx_r13.selectedFieldIndex].start)(\"disabled\", ctx_r13.isProcessing);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r13.fieldConfigs[ctx_r13.selectedFieldIndex].length)(\"disabled\", ctx_r13.isProcessing);\n  }\n}\n\nfunction FileUploaderComponent_div_6_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"div\", 13)(2, \"label\", 14)(3, \"span\", 22);\n    i0.ɵɵtext(4, \"Field Count:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_div_9_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.fieldCount = $event);\n    })(\"input\", function FileUploaderComponent_div_6_div_9_Template_input_input_5_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onFieldCountChange());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\", 13)(7, \"label\", 14)(8, \"span\", 22);\n    i0.ɵɵtext(9, \"Field Select:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"select\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_div_9_Template_select_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.selectedFieldIndex = $event);\n    });\n    i0.ɵɵtemplate(11, FileUploaderComponent_div_6_div_9_option_11_Template, 2, 2, \"option\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(12, FileUploaderComponent_div_6_div_9_div_12_Template, 14, 5, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.fieldCount)(\"disabled\", ctx_r8.isProcessing);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.selectedFieldIndex)(\"disabled\", ctx_r8.isProcessing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.fieldConfigs);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.fieldConfigs[ctx_r8.selectedFieldIndex]);\n  }\n}\n\nfunction FileUploaderComponent_div_6_div_10_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r29 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r29.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r29.label, \" \");\n  }\n}\n\nfunction FileUploaderComponent_div_6_div_10_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r30 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r30.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r30.label, \" \");\n  }\n}\n\nfunction FileUploaderComponent_div_6_div_10_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r31 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r31.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r31.label, \" \");\n  }\n}\n\nfunction FileUploaderComponent_div_6_div_10_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r32 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r32.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r32.label, \" \");\n  }\n}\n\nfunction FileUploaderComponent_div_6_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 13)(2, \"label\", 14)(3, \"span\", 22);\n    i0.ɵɵtext(4, \"Value Delimiter:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"select\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_div_10_Template_select_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r33.selectedDelimiter = $event);\n    })(\"change\", function FileUploaderComponent_div_6_div_10_Template_select_change_5_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r35 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r35.onDelimiterChange());\n    });\n    i0.ɵɵtemplate(6, FileUploaderComponent_div_6_div_10_option_6_Template, 2, 2, \"option\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 13)(8, \"label\", 14)(9, \"span\", 22);\n    i0.ɵɵtext(10, \"Row Delimiter:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"select\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_div_10_Template_select_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r36.selectedRowDelimiter = $event);\n    })(\"change\", function FileUploaderComponent_div_6_div_10_Template_select_change_11_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r37 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r37.onRowDelimiterChange());\n    });\n    i0.ɵɵtemplate(12, FileUploaderComponent_div_6_div_10_option_12_Template, 2, 2, \"option\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"div\", 13)(14, \"label\", 14)(15, \"span\", 22);\n    i0.ɵɵtext(16, \"Quote Handling:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"select\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_div_10_Template_select_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r38 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r38.selectedQuoteOption = $event);\n    })(\"change\", function FileUploaderComponent_div_6_div_10_Template_select_change_17_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r39 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r39.onQuoteOptionChange());\n    });\n    i0.ɵɵtemplate(18, FileUploaderComponent_div_6_div_10_option_18_Template, 2, 2, \"option\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"div\", 13)(20, \"label\", 14)(21, \"span\", 22);\n    i0.ɵɵtext(22, \"File Encoding:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"select\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_div_10_Template_select_ngModelChange_23_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r40 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r40.selectedEncoding = $event);\n    })(\"change\", function FileUploaderComponent_div_6_div_10_Template_select_change_23_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r41 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r41.onEncodingChange());\n    });\n    i0.ɵɵtemplate(24, FileUploaderComponent_div_6_div_10_option_24_Template, 2, 2, \"option\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"div\", 13)(26, \"label\", 14)(27, \"span\", 22);\n    i0.ɵɵtext(28, \"Row Prefix:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"input\", 34);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_div_10_Template_input_ngModelChange_29_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r42 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r42.rowPrefix = $event);\n    })(\"input\", function FileUploaderComponent_div_6_div_10_Template_input_input_29_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r43 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r43.onRowPrefixChange());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(30, \"div\", 13)(31, \"label\", 14)(32, \"span\", 22);\n    i0.ɵɵtext(33, \"Row Suffix:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"input\", 34);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_div_10_Template_input_ngModelChange_34_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r44 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r44.rowSuffix = $event);\n    })(\"input\", function FileUploaderComponent_div_6_div_10_Template_input_input_34_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r45 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r45.onRowSuffixChange());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r9.selectedDelimiter)(\"disabled\", ctx_r9.isProcessing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.delimiterOptions);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r9.selectedRowDelimiter)(\"disabled\", ctx_r9.isProcessing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.rowDelimiterOptions);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r9.selectedQuoteOption)(\"disabled\", ctx_r9.isProcessing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.quoteOptions);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r9.selectedEncoding)(\"disabled\", ctx_r9.isProcessing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.encodingOptions);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r9.rowPrefix)(\"disabled\", ctx_r9.isProcessing);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r9.rowSuffix)(\"disabled\", ctx_r9.isProcessing);\n  }\n}\n\nfunction FileUploaderComponent_div_6_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function FileUploaderComponent_div_6_div_19_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r46 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r46.processData());\n    });\n    i0.ɵɵtext(2, \" Process Data \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction FileUploaderComponent_div_6_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function FileUploaderComponent_div_6_button_20_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const ctx_r48 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r48.clearSelection());\n    });\n    i0.ɵɵtext(1, \" \\u2715 \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FileUploaderComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"label\", 14)(3, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.hasHeader = $event);\n    })(\"change\", function FileUploaderComponent_div_6_Template_input_change_3_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r52 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r52.onHeaderCheckboxChange());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" File has a header line \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 13)(6, \"label\", 14)(7, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.skipEmptyLines = $event);\n    })(\"change\", function FileUploaderComponent_div_6_Template_input_change_7_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r54.onSkipEmptyLinesChange());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \" Skip empty lines \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, FileUploaderComponent_div_6_div_9_Template, 13, 6, \"div\", 16);\n    i0.ɵɵtemplate(10, FileUploaderComponent_div_6_div_10_Template, 35, 16, \"div\", 17);\n    i0.ɵɵelementStart(11, \"div\", 13)(12, \"label\", 14)(13, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r55 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r55.trimWhitespace = $event);\n    })(\"change\", function FileUploaderComponent_div_6_Template_input_change_13_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r56 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r56.onTrimWhitespaceChange());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \" Trim whitespace from values \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 18)(16, \"label\", 14)(17, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function FileUploaderComponent_div_6_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r57 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r57.doubleQuoteWrap = $event);\n    })(\"change\", function FileUploaderComponent_div_6_Template_input_change_17_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r58 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r58.onDoubleQuoteWrapChange());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \" Double Quote Wrap \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(19, FileUploaderComponent_div_6_div_19_Template, 3, 0, \"div\", 19);\n    i0.ɵɵtemplate(20, FileUploaderComponent_div_6_button_20_Template, 2, 0, \"button\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.hasHeader)(\"disabled\", ctx_r1.isProcessing);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.skipEmptyLines)(\"disabled\", ctx_r1.isProcessing);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.fileType === \"txt\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.fileType === \"csv\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.trimWhitespace)(\"disabled\", ctx_r1.isProcessing);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.doubleQuoteWrap)(\"disabled\", ctx_r1.isProcessing);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedFile && !ctx_r1.isProcessing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedFile && !ctx_r1.isProcessing);\n  }\n}\n\nfunction FileUploaderComponent_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 38);\n    i0.ɵɵtext(1, \" Select a file to upload \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FileUploaderComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1, \" Selected: \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 40);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 41);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.selectedFile.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", (ctx_r3.selectedFile.size / 1024).toFixed(1), \" KB)\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"- \", ctx_r3.fileType == null ? null : ctx_r3.fileType.toUpperCase(), \" file\");\n  }\n}\n\nfunction FileUploaderComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 42);\n    i0.ɵɵtext(1, \" Processing \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"... \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.selectedFile == null ? null : ctx_r4.selectedFile.name);\n  }\n}\n\nexport class FileUploaderComponent {\n  constructor(csvService, txtService) {\n    this.csvService = csvService;\n    this.txtService = txtService; // Output events to communicate with parent component\n\n    this.onConvert = new EventEmitter();\n    this.onError = new EventEmitter();\n    this.onFileClear = new EventEmitter();\n    this.onOptionsChange = new EventEmitter(); // Track selected file and upload state\n\n    this.selectedFile = null;\n    this.isProcessing = false;\n    this.hasHeader = true; // default to true\n\n    this.skipEmptyLines = true; // default to true (skip empty lines)\n\n    this.selectedDelimiter = \",\";\n    this.doubleQuoteWrap = true;\n    this.selectedRowDelimiter = \"newline\"; // default to newline\n\n    this.rowPrefix = \"\";\n    this.rowSuffix = \"\";\n    this.selectedEncoding = \"utf-8\";\n    this.selectedQuoteOption = \"none\";\n    this.trimWhitespace = true;\n    this.fileType = null;\n    this.fieldCount = 3;\n    this.selectedFieldIndex = 0;\n    this.fieldConfigs = [{\n      start: 0,\n      length: 10\n    }, {\n      start: 10,\n      length: 10\n    }, {\n      start: 20,\n      length: 10\n    }]; // Delimiter options for the dropdown\n\n    this.delimiterOptions = [{\n      value: \",\",\n      label: \"Comma (,)\"\n    }, {\n      value: \";\",\n      label: \"Semicolon (;)\"\n    }, {\n      value: \"|\",\n      label: \"Pipe (|)\"\n    }, {\n      value: \":\",\n      label: \"Colon (:)\"\n    }, {\n      value: \"\\t\",\n      label: \"Tab\"\n    }, {\n      value: \"/\",\n      label: \"Slash (/)\"\n    }, {\n      value: \"#\",\n      label: \"Hash (#)\"\n    }]; // Row delimiter options for the dropdown\n\n    this.rowDelimiterOptions = [{\n      value: \"newline\",\n      label: \"Newline (\\\\n)\"\n    }, {\n      value: \"carriage-return\",\n      label: \"Carriage Return(\\\\r)\"\n    }, {\n      value: \"crlf\",\n      label: \"Carriage Return + Newline (\\\\r\\\\n)\"\n    }, {\n      value: \",\",\n      label: \"Comma (,)\"\n    }, {\n      value: \";\",\n      label: \"Semicolon (;)\"\n    }, {\n      value: \"|\",\n      label: \"Pipe (|)\"\n    }, {\n      value: \":\",\n      label: \"Colon (:)\"\n    }, {\n      value: \"\\t\",\n      label: \"Tab\"\n    }, {\n      value: \"/\",\n      label: \"Slash (/)\"\n    }, {\n      value: \"#\",\n      label: \"Hash (#)\"\n    }]; // Encoding options for the dropdown\n\n    this.encodingOptions = [{\n      value: \"utf-8\",\n      label: \"UTF-8\"\n    }, {\n      value: \"utf-8-bom\",\n      label: \"UTF-8 with BOM\"\n    }, {\n      value: \"windows-1254\",\n      label: \"Windows-1254 (Turkish)\"\n    }, {\n      value: \"iso-8859-9\",\n      label: \"ISO-8859-9 (Turkish)\"\n    }]; // Quote handling options\n\n    this.quoteOptions = [{\n      value: \"none\",\n      label: \"None (No Quote Handling)\"\n    }, {\n      value: \"single\",\n      label: \"Single Quote (')\"\n    }, {\n      value: \"double\",\n      label: 'Double Quote (\")'\n    }];\n  }\n\n  get hasPrefixAndSuffix() {\n    return this.rowPrefix.trim() !== \"\" && this.rowSuffix.trim() !== \"\";\n  }\n\n  get quoteCharacter() {\n    switch (this.selectedQuoteOption) {\n      case \"single\":\n        return \"'\";\n\n      case \"double\":\n        return '\"';\n\n      case \"none\":\n      default:\n        return \"\";\n    }\n  } //quote handling enabled mı değil mi\n\n\n  get isQuoteHandlingEnabled() {\n    return this.selectedQuoteOption !== \"none\";\n  }\n  /**\r\n   * Handles file selection and conversion\r\n   * @param event - File input change event\r\n   */\n\n\n  onFileSelect(event) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const files = event.target.files;\n\n      if (files && files.length > 0) {\n        const file = files[0];\n        _this.selectedFile = file;\n        _this.fileType = null;\n      }\n    })();\n  }\n\n  getOptions() {\n    return {\n      hasHeader: this.hasHeader,\n      skipEmptyLines: this.skipEmptyLines,\n      selectedDelimiter: this.selectedDelimiter,\n      doubleQuoteWrap: this.doubleQuoteWrap,\n      selectedRowDelimiter: this.selectedRowDelimiter,\n      rowPrefix: this.rowPrefix,\n      rowSuffix: this.rowSuffix,\n      selectedEncoding: this.selectedEncoding,\n      selectedQuoteOption: this.selectedQuoteOption,\n      trimWhitespace: this.trimWhitespace\n    };\n  }\n\n  getTxtOptions() {\n    return {\n      fieldCount: this.fieldCount,\n      startPositions: this.fieldConfigs.map(config => config.start),\n      lengths: this.fieldConfigs.map(config => config.length),\n      hasHeader: this.hasHeader,\n      skipEmptyLines: this.skipEmptyLines\n    };\n  }\n  /**\r\n   * Clears the selected file and resets the input\r\n   */\n\n\n  clearSelection() {\n    this.selectedFile = null;\n    this.fileType = null;\n    this.isProcessing = false; // Reset the file input\n\n    const fileInput = document.getElementById(\"csvFileInput\");\n\n    if (fileInput) {\n      fileInput.value = \"\";\n    } // Emit clear event to parent component\n\n\n    this.onFileClear.emit();\n  }\n  /**\r\n   * Emits the current options to parent component\r\n   */\n\n\n  emitOptions() {\n    const options = {\n      hasHeader: this.hasHeader,\n      skipEmptyLines: this.skipEmptyLines,\n      selectedDelimiter: this.selectedDelimiter,\n      doubleQuoteWrap: this.doubleQuoteWrap,\n      selectedRowDelimiter: this.selectedRowDelimiter,\n      rowPrefix: this.rowPrefix,\n      rowSuffix: this.rowSuffix,\n      selectedEncoding: this.selectedEncoding,\n      selectedQuoteOption: this.selectedQuoteOption,\n      trimWhitespace: this.trimWhitespace\n    };\n    this.onOptionsChange.emit(options);\n  } // TXT-specific methods\n\n\n  setFieldCount(count) {\n    this.fieldCount = count; // Adjust fieldConfigs array to match the new count\n\n    while (this.fieldConfigs.length < count) {\n      const lastConfig = this.fieldConfigs[this.fieldConfigs.length - 1];\n      const newStart = lastConfig ? lastConfig.start + lastConfig.length : 0;\n      this.fieldConfigs.push({\n        start: newStart,\n        length: 10\n      });\n    }\n\n    while (this.fieldConfigs.length > count) {\n      this.fieldConfigs.pop();\n    } // Reset selected field index if it's out of bounds\n\n\n    if (this.selectedFieldIndex >= count) {\n      this.selectedFieldIndex = count - 1;\n    }\n  }\n\n  onFieldCountChange() {\n    this.setFieldCount(this.fieldCount);\n  }\n\n  onFieldConfigChange() {// This method can be called when field configurations change\n    // You can add any additional logic here if needed\n  }\n\n  onHeaderCheckboxChange() {\n    this.emitOptions();\n  }\n\n  onSkipEmptyLinesChange() {\n    this.emitOptions();\n  }\n\n  onDelimiterChange() {\n    this.emitOptions();\n  }\n\n  onRowDelimiterChange() {\n    this.emitOptions();\n  }\n\n  onRowPrefixChange() {\n    this.emitOptions();\n  }\n\n  onRowSuffixChange() {\n    this.emitOptions();\n  }\n\n  onDoubleQuoteWrapChange() {\n    this.selectedQuoteOption = this.doubleQuoteWrap ? \"double\" : \"none\";\n    this.emitOptions();\n  }\n\n  onQuoteOptionChange() {\n    this.doubleQuoteWrap = this.selectedQuoteOption === \"double\";\n    this.emitOptions();\n  }\n\n  onEncodingChange() {\n    this.emitOptions();\n  }\n\n  onTrimWhitespaceChange() {\n    this.emitOptions();\n  }\n\n  processData() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this2.selectedFile) {\n        _this2.onError.emit(\"No file selected. Please select a file first.\");\n\n        return;\n      }\n\n      if (!_this2.fileType) {\n        _this2.onError.emit(\"Please select the file type.\");\n\n        return;\n      }\n\n      if (_this2.isProcessing) {\n        return;\n      }\n\n      _this2.isProcessing = true;\n      console.log(\"Processing data with options:\", _this2.getOptions());\n\n      try {\n        let jsonResult;\n\n        if (_this2.fileType === \"csv\") {\n          jsonResult = yield _this2.csvService.convertFileToJson(_this2.selectedFile, _this2.getOptions());\n        } else if (_this2.fileType === \"txt\") {\n          const text = yield _this2.selectedFile.text();\n\n          const result = _this2.txtService.convert(text, _this2.getTxtOptions());\n\n          jsonResult = {\n            properties: Object.keys(result[0] || {}),\n            result: result\n          };\n        }\n\n        _this2.isProcessing = false;\n        console.log(\"Processing completed successfully:\", jsonResult);\n\n        _this2.onConvert.emit(jsonResult);\n\n        _this2.onOptionsChange.emit(_this2.getOptions());\n      } catch (error) {\n        _this2.isProcessing = false;\n        console.error(\"Processing failed:\", error);\n\n        _this2.onError.emit(\"Error processing file: \" + error);\n      }\n    })();\n  }\n\n}\n\nFileUploaderComponent.ɵfac = function FileUploaderComponent_Factory(t) {\n  return new (t || FileUploaderComponent)(i0.ɵɵdirectiveInject(i1.CsvConverterService), i0.ɵɵdirectiveInject(TxtToJsonService));\n};\n\nFileUploaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FileUploaderComponent,\n  selectors: [[\"app-file-uploader\"]],\n  outputs: {\n    onConvert: \"onConvert\",\n    onError: \"onError\",\n    onFileClear: \"onFileClear\",\n    onOptionsChange: \"onOptionsChange\"\n  },\n  decls: 11,\n  vars: 6,\n  consts: [[1, \"file-upload\"], [1, \"file-input-container\"], [\"id\", \"csvFileInput\", \"type\", \"file\", \"accept\", \".csv,.txt,.xml\", 1, \"form-control\", 3, \"disabled\", \"change\"], [\"class\", \"file-type-selection\", 4, \"ngIf\"], [\"class\", \"options-section\", 4, \"ngIf\"], [1, \"file-status\"], [\"class\", \"help-text\", 4, \"ngIf\"], [\"class\", \"selected-file\", 4, \"ngIf\"], [\"class\", \"processing\", 4, \"ngIf\"], [1, \"file-type-selection\"], [\"type\", \"radio\", \"name\", \"fileType\", \"value\", \"csv\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"type\", \"radio\", \"name\", \"fileType\", \"value\", \"txt\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [1, \"options-section\"], [1, \"option-item\"], [1, \"option-label\"], [\"type\", \"checkbox\", 1, \"option-checkbox\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"change\"], [\"class\", \"txt-options\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"option-item\", 2, \"display\", \"none\"], [\"class\", \"process-button-container\", 4, \"ngIf\"], [\"class\", \"cancel-btn\", \"title\", \"Remove selected file and clear data\", 3, \"click\", 4, \"ngIf\"], [1, \"txt-options\"], [1, \"option-text\"], [\"type\", \"number\", \"min\", \"1\", \"max\", \"50\", 1, \"number-input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"input\"], [1, \"delimiter-select\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"field-settings\", 4, \"ngIf\"], [3, \"value\"], [1, \"field-settings\"], [1, \"field-config-row\"], [1, \"field-config-item\"], [\"type\", \"number\", \"min\", \"0\", 1, \"number-input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"input\"], [\"type\", \"number\", \"min\", \"1\", 1, \"number-input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"input\"], [1, \"delimiter-select\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"change\"], [\"type\", \"text\", 1, \"prefix-suffix-input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"input\"], [1, \"process-button-container\"], [\"title\", \"Process the file with current settings\", 1, \"btn\", \"btn-primary\", \"process-btn\", 3, \"click\"], [\"title\", \"Remove selected file and clear data\", 1, \"cancel-btn\", 3, \"click\"], [1, \"help-text\"], [1, \"selected-file\"], [1, \"file-size\"], [1, \"file-type\"], [1, \"processing\"]],\n  template: function FileUploaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Upload a File\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"input\", 2);\n      i0.ɵɵlistener(\"change\", function FileUploaderComponent_Template_input_change_4_listener($event) {\n        return ctx.onFileSelect($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, FileUploaderComponent_div_5_Template, 9, 4, \"div\", 3);\n      i0.ɵɵtemplate(6, FileUploaderComponent_div_6_Template, 21, 12, \"div\", 4);\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵtemplate(8, FileUploaderComponent_p_8_Template, 2, 0, \"p\", 6);\n      i0.ɵɵtemplate(9, FileUploaderComponent_p_9_Template, 8, 3, \"p\", 7);\n      i0.ɵɵtemplate(10, FileUploaderComponent_p_10_Template, 5, 1, \"p\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.isProcessing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.selectedFile && !ctx.isProcessing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedFile && !ctx.isProcessing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isProcessing);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.CheckboxControlValueAccessor, i3.SelectControlValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.MinValidator, i3.MaxValidator, i3.NgModel],\n  styles: [\"h3[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n  color: #333;\\n}\\n\\np[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  color: #666;\\n}\\n\\n.file-input-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: inline-block;\\n  width: 100%;\\n  margin-bottom: 15px;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 12px;\\n  border: 2px solid #ddd;\\n  border-radius: 8px;\\n  font-size: 14px;\\n  transition: border-color 0.3s ease;\\n}\\n\\n.form-control[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #007bff;\\n  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\\n}\\n\\n.form-control[_ngcontent-%COMP%]:disabled {\\n  background-color: #f8f9fa;\\n  cursor: not-allowed;\\n  opacity: 0.6;\\n}\\n\\n.cancel-btn[_ngcontent-%COMP%] {\\n  position: absolute;\\n  right: 10px;\\n  top: 50%;\\n  transform: translateY(-50%);\\n  background: #dc3545;\\n  color: white;\\n  border: none;\\n  border-radius: 50%;\\n  width: 28px;\\n  height: 28px;\\n  font-size: 14px;\\n  font-weight: bold;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: all 0.3s ease;\\n  z-index: 10;\\n  animation: fadeIn 0.3s ease-in;\\n}\\n\\n.cancel-btn[_ngcontent-%COMP%]:hover {\\n  background: #c82333;\\n  transform: translateY(-50%) scale(1.1);\\n  box-shadow: 0 2px 8px rgba(220, 53, 69, 0.3);\\n}\\n\\n.cancel-btn[_ngcontent-%COMP%]:active {\\n  transform: translateY(-50%) scale(0.95);\\n}\\n\\n.options-section[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n  padding: 15px;\\n  background-color: #f8f9fa;\\n  border-radius: 8px;\\n  border: 1px solid #e9ecef;\\n  position: relative;\\n}\\n\\n.option-item[_ngcontent-%COMP%] {\\n  margin-bottom: 12px;\\n}\\n\\n.option-item[_ngcontent-%COMP%]:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.option-label[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  font-size: 14px;\\n  cursor: pointer;\\n  color: #333;\\n  gap: 8px;\\n}\\n\\n.option-label[_ngcontent-%COMP%]:hover {\\n  color: #007bff;\\n}\\n\\n.option-checkbox[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n\\n.option-checkbox[_ngcontent-%COMP%]:disabled {\\n  cursor: not-allowed;\\n  opacity: 0.6;\\n}\\n\\n.option-text[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  min-width: 120px;\\n}\\n\\n.delimiter-select[_ngcontent-%COMP%] {\\n  padding: 6px 12px;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  font-size: 14px;\\n  background-color: white;\\n  cursor: pointer;\\n  transition: border-color 0.3s ease;\\n  min-width: 150px;\\n}\\n\\n.delimiter-select[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #007bff;\\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.1);\\n}\\n\\n.delimiter-select[_ngcontent-%COMP%]:disabled {\\n  background-color: #f8f9fa;\\n  cursor: not-allowed;\\n  opacity: 0.6;\\n}\\n\\n.txt-options[_ngcontent-%COMP%] {\\n  border-top: 2px solid #007bff;\\n  padding-top: 15px;\\n  margin-top: 15px;\\n}\\n\\n.field-settings[_ngcontent-%COMP%] {\\n  margin-top: 15px;\\n  padding: 15px;\\n  background-color: #e3f2fd;\\n  border-radius: 6px;\\n  border: 1px solid #bbdefb;\\n}\\n\\n.field-settings[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n  margin: 0 0 15px 0;\\n  color: #1976d2;\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n\\n.field-config-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 15px;\\n  flex-wrap: wrap;\\n}\\n\\n.field-config-item[_ngcontent-%COMP%] {\\n  flex: 1;\\n  min-width: 200px;\\n}\\n\\n.number-input[_ngcontent-%COMP%] {\\n  padding: 6px 12px;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  font-size: 14px;\\n  background-color: white;\\n  transition: border-color 0.3s ease;\\n  min-width: 80px;\\n}\\n\\n.number-input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #007bff;\\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.1);\\n}\\n\\n.number-input[_ngcontent-%COMP%]:disabled {\\n  background-color: #f8f9fa;\\n  cursor: not-allowed;\\n  opacity: 0.6;\\n}\\n\\n.prefix-suffix-section[_ngcontent-%COMP%] {\\n  margin: 20px 0;\\n  padding: 15px;\\n  background-color: #f0f8ff;\\n  border-radius: 8px;\\n  border: 1px solid #b3d9ff;\\n}\\n\\n.section-header[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\n.section-header[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n  margin: 0 0 8px 0;\\n  color: #2c5aa0;\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n\\n.section-description[_ngcontent-%COMP%] {\\n  margin: 0;\\n  color: #5a6c7d;\\n  font-size: 13px;\\n  line-height: 1.4;\\n  font-style: italic;\\n}\\n\\n.prefix-suffix-input[_ngcontent-%COMP%] {\\n  padding: 8px 12px;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  font-size: 14px;\\n  background-color: white;\\n  transition: border-color 0.3s ease;\\n  min-width: 200px;\\n  font-family: \\\"Courier New\\\", monospace;\\n}\\n\\n.prefix-suffix-input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #007bff;\\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.1);\\n}\\n\\n.prefix-suffix-input[_ngcontent-%COMP%]:disabled {\\n  background-color: #f8f9fa;\\n  cursor: not-allowed;\\n  opacity: 0.6;\\n}\\n\\n.prefix-suffix-input[_ngcontent-%COMP%]::placeholder {\\n  color: #6c757d;\\n  font-style: italic;\\n  font-family: system-ui, -apple-system, sans-serif;\\n}\\n\\n.info-message[_ngcontent-%COMP%] {\\n  margin-top: 12px;\\n  padding: 10px;\\n  background-color: #d4edda;\\n  border: 1px solid #c3e6cb;\\n  border-radius: 4px;\\n  border-left: 4px solid #28a745;\\n}\\n\\n.info-text[_ngcontent-%COMP%] {\\n  margin: 0;\\n  color: #155724;\\n  font-size: 13px;\\n}\\n\\n.info-text[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-family: \\\"Courier New\\\", monospace;\\n  background-color: rgba(40, 167, 69, 0.1);\\n  padding: 2px 4px;\\n  border-radius: 3px;\\n}\\n\\n.info-text[_ngcontent-%COMP%]   small[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-top: 4px;\\n  opacity: 0.8;\\n}\\n\\n.file-status[_ngcontent-%COMP%] {\\n  min-height: 24px;\\n}\\n\\n.help-text[_ngcontent-%COMP%] {\\n  color: #6c757d;\\n  font-size: 14px;\\n  margin: 0;\\n  font-style: italic;\\n}\\n\\n.selected-file[_ngcontent-%COMP%] {\\n  color: #28a745;\\n  font-size: 14px;\\n  margin: 0;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n}\\n\\n.selected-file[_ngcontent-%COMP%]   .file-size[_ngcontent-%COMP%] {\\n  color: #6c757d;\\n  font-weight: normal;\\n  font-size: 12px;\\n}\\n\\n.selected-file[_ngcontent-%COMP%]   .file-type[_ngcontent-%COMP%] {\\n  color: #007bff;\\n  font-weight: 600;\\n  font-size: 12px;\\n  text-transform: uppercase;\\n}\\n\\n.processing[_ngcontent-%COMP%] {\\n  color: #007bff;\\n  font-size: 14px;\\n  margin: 0;\\n  font-weight: 500;\\n  animation: pulse 1.5s ease-in-out infinite;\\n}\\n\\n.process-button-container[_ngcontent-%COMP%] {\\n  margin: 20px 0 10px 0;\\n  text-align: center;\\n}\\n\\n.process-help-text[_ngcontent-%COMP%] {\\n  margin: 8px 0 0 0;\\n  font-size: 12px;\\n  color: #6c757d;\\n  font-style: italic;\\n  text-align: center;\\n}\\n\\n.process-btn[_ngcontent-%COMP%] {\\n  background-color: #28a745;\\n  color: white;\\n  border: none;\\n  padding: 12px 24px;\\n  border-radius: 6px;\\n  font-size: 16px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  box-shadow: 0 2px 4px rgba(40, 167, 69, 0.2);\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  justify-content: center;\\n}\\n\\n.process-btn[_ngcontent-%COMP%]:hover {\\n  background-color: #218838;\\n  transform: translateY(-1px);\\n  box-shadow: 0 4px 8px rgba(40, 167, 69, 0.3);\\n}\\n\\n.process-btn[_ngcontent-%COMP%]:active {\\n  transform: translateY(0);\\n  box-shadow: 0 2px 4px rgba(40, 167, 69, 0.2);\\n}\\n\\n.process-btn[_ngcontent-%COMP%]:disabled {\\n  background-color: #6c757d;\\n  cursor: not-allowed;\\n  transform: none;\\n  box-shadow: none;\\n}\\n\\n@keyframes pulse {\\n  0% {\\n    opacity: 1;\\n  }\\n  50% {\\n    opacity: 0.6;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes fadeIn {\\n  from {\\n    opacity: 0;\\n    transform: translateY(-50%) scale(0.8);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(-50%) scale(1);\\n  }\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .cancel-btn[_ngcontent-%COMP%] {\\n    width: 32px;\\n    height: 32px;\\n    font-size: 16px;\\n  }\\n  .selected-file[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    align-items: flex-start;\\n    gap: 4px;\\n  }\\n  .option-label[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    align-items: flex-start;\\n    gap: 4px;\\n  }\\n  .delimiter-select[_ngcontent-%COMP%], .prefix-suffix-input[_ngcontent-%COMP%], .number-input[_ngcontent-%COMP%] {\\n    width: 100%;\\n    min-width: unset;\\n  }\\n  .option-text[_ngcontent-%COMP%] {\\n    min-width: unset;\\n  }\\n  .section-header[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n    font-size: 14px;\\n  }\\n  .section-description[_ngcontent-%COMP%] {\\n    font-size: 12px;\\n  }\\n  .field-config-row[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    gap: 10px;\\n  }\\n  .field-config-item[_ngcontent-%COMP%] {\\n    min-width: unset;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"]\n});","map":{"version":3,"mappings":";AAAA,SAAoBA,YAApB,QAAwD,eAAxD;AAEA,SAASC,gBAAT,QAAmD,sCAAnD;;;;;;;;;;;ICYEC,+BAAsD,CAAtD,EAAsD,IAAtD;IACMA;IAAgBA;IACpBA,8BAAO,CAAP,EAAO,OAAP,EAAO,EAAP;IAKIA;MAAAA;MAAA;MAAA;IAAA;IAJFA;IAOAA;IACFA;IACAA,8BAAO,CAAP,EAAO,OAAP,EAAO,EAAP;IAKIA;MAAAA;MAAA;MAAA;IAAA;IAJFA;IAOAA;IACFA;;;;;IAdIA;IAAAA,0CAAsB,UAAtB,EAAsBC,mBAAtB;IAUAD;IAAAA,0CAAsB,UAAtB,EAAsBC,mBAAtB;;;;;;IA8DID;IACEA;IACFA;;;;;IAF0DA;IACxDA;IAAAA;;;;;;;;IAORA,gCAAqE,CAArE,EAAqE,IAArE;IACMA;IAA8CA;IAElDA,gCAA8B,CAA9B,EAA8B,KAA9B,EAA8B,EAA9B,EAA8B,CAA9B,EAA8B,OAA9B,EAA8B,EAA9B,EAA8B,CAA9B,EAA8B,MAA9B,EAA8B,EAA9B;IAGgCA;IAAeA;IACzCA;IAEEA;MAAAA;MAAA;MAAA,OAAaA,+EAAb;IACX,CADW,EAAoD,OAApD,EAAoD;MAAAA;MAAA;MAAA,OAC3CA,6CAD2C;IACtB,CAD9B;IAFFA;IAUJA,gCAA+B,EAA/B,EAA+B,OAA/B,EAA+B,EAA/B,EAA+B,EAA/B,EAA+B,MAA/B,EAA+B,EAA/B;IAE8BA;IAAiBA;IAC3CA;IAEEA;MAAAA;MAAA;MAAA,OAAaA,gFAAb;IACX,CADW,EAAqD,OAArD,EAAqD;MAAAA;MAAA;MAAA,OAC5CA,6CAD4C;IACvB,CAD9B;IAFFA;;;;;IAnBFA;IAAAA;IAQIA;IAAAA,iFAAoD,UAApD,EAAoDE,oBAApD;IAaAF;IAAAA,kFAAqD,UAArD,EAAqDE,oBAArD;;;;;;;;IAtDZF,gCAAoD,CAApD,EAAoD,KAApD,EAAoD,EAApD,EAAoD,CAApD,EAAoD,OAApD,EAAoD,EAApD,EAAoD,CAApD,EAAoD,MAApD,EAAoD,EAApD;IAIgCA;IAAYA;IACtCA;IAEEA;MAAAA;MAAA;MAAA;IAAA,GAAwB,OAAxB,EAAwB;MAAAA;MAAA;MAAA,OACfA,4CADe;IACK,CAD7B;IAFFA;IAYJA,gCAAyB,CAAzB,EAAyB,OAAzB,EAAyB,EAAzB,EAAyB,CAAzB,EAAyB,MAAzB,EAAyB,EAAzB;IAE8BA;IAAaA;IACvCA;IACEA;MAAAA;MAAA;MAAA;IAAA;IAGAA;IAGFA;IAKJA;IA+BFA;;;;;IAxDQA;IAAAA,4CAAwB,UAAxB,EAAwBG,mBAAxB;IAcAH;IAAAA,oDAAgC,UAAhC,EAAgCG,mBAAhC;IAG0BH;IAAAA;IAQHA;IAAAA;;;;;;IA4CvBA;IACEA;IACFA;;;;;IAFgDA;IAC9CA;IAAAA;;;;;;IAeFA;IACEA;IACFA;;;;;IAFmDA;IACjDA;IAAAA;;;;;;IAeFA;IACEA;IACFA;;;;;IAF4CA;IAC1CA;IAAAA;;;;;;IAeFA;IACEA;IACFA;;;;;IAF+CA;IAC7CA;IAAAA;;;;;;;;IA3DVA,4BAAgC,CAAhC,EAAgC,KAAhC,EAAgC,EAAhC,EAAgC,CAAhC,EAAgC,OAAhC,EAAgC,EAAhC,EAAgC,CAAhC,EAAgC,MAAhC,EAAgC,EAAhC;IAIgCA;IAAgBA;IAC1CA;IACEA;MAAAA;MAAA;MAAA;IAAA,GAA+B,QAA/B,EAA+B;MAAAA;MAAA;MAAA,OACrBA,2CADqB;IACF,CAD7B;IAIAA;IAGFA;IAKJA,gCAAyB,CAAzB,EAAyB,OAAzB,EAAyB,EAAzB,EAAyB,CAAzB,EAAyB,MAAzB,EAAyB,EAAzB;IAE8BA;IAAcA;IACxCA;IACEA;MAAAA;MAAA;MAAA;IAAA,GAAkC,QAAlC,EAAkC;MAAAA;MAAA;MAAA,OACxBA,8CADwB;IACF,CADhC;IAIAA;IAGFA;IAKJA,iCAAyB,EAAzB,EAAyB,OAAzB,EAAyB,EAAzB,EAAyB,EAAzB,EAAyB,MAAzB,EAAyB,EAAzB;IAE8BA;IAAeA;IACzCA;IACEA;MAAAA;MAAA;MAAA;IAAA,GAAiC,QAAjC,EAAiC;MAAAA;MAAA;MAAA,OACvBA,6CADuB;IACF,CAD/B;IAIAA;IAGFA;IAKJA,iCAAyB,EAAzB,EAAyB,OAAzB,EAAyB,EAAzB,EAAyB,EAAzB,EAAyB,MAAzB,EAAyB,EAAzB;IAE8BA;IAAcA;IACxCA;IACEA;MAAAA;MAAA;MAAA;IAAA,GAA8B,QAA9B,EAA8B;MAAAA;MAAA;MAAA,OACpBA,0CADoB;IACF,CAD5B;IAIAA;IAGFA;IAKJA,iCAAyB,EAAzB,EAAyB,OAAzB,EAAyB,EAAzB,EAAyB,EAAzB,EAAyB,MAAzB,EAAyB,EAAzB;IAE8BA;IAAWA;IACrCA;IAEEA;MAAAA;MAAA;MAAA;IAAA,GAAuB,OAAvB,EAAuB;MAAAA;MAAA;MAAA,OACdA,2CADc;IACK,CAD5B;IAFFA;IASJA,iCAAyB,EAAzB,EAAyB,OAAzB,EAAyB,EAAzB,EAAyB,EAAzB,EAAyB,MAAzB,EAAyB,EAAzB;IAE8BA;IAAWA;IACrCA;IAEEA;MAAAA;MAAA;MAAA;IAAA,GAAuB,OAAvB,EAAuB;MAAAA;MAAA;MAAA,OACdA,2CADc;IACK,CAD5B;IAFFA;;;;;IA3EEA;IAAAA,mDAA+B,UAA/B,EAA+BI,mBAA/B;IAI2BJ;IAAAA;IAY3BA;IAAAA,sDAAkC,UAAlC,EAAkCI,mBAAlC;IAI2BJ;IAAAA;IAY3BA;IAAAA,qDAAiC,UAAjC,EAAiCI,mBAAjC;IAI2BJ;IAAAA;IAY3BA;IAAAA,kDAA8B,UAA9B,EAA8BI,mBAA9B;IAI2BJ;IAAAA;IAa3BA;IAAAA,2CAAuB,UAAvB,EAAuBI,mBAAvB;IAYAJ;IAAAA,2CAAuB,UAAvB,EAAuBI,mBAAvB;;;;;;;;IAmCRJ,gCAA4E,CAA5E,EAA4E,QAA5E,EAA4E,EAA5E;IAGIA;MAAAA;MAAA;MAAA,OAASA,qCAAT;IAAsB,CAAtB;IAEAA;IACFA;;;;;;;;IAKFA;IAGEA;MAAAA;MAAA;MAAA,OAASA,wCAAT;IAAyB,CAAzB;IAEAA;IACFA;;;;;;;;IAtOFA,gCAAkD,CAAlD,EAAkD,KAAlD,EAAkD,EAAlD,EAAkD,CAAlD,EAAkD,OAAlD,EAAkD,EAAlD,EAAkD,CAAlD,EAAkD,OAAlD,EAAkD,EAAlD;IAMQA;MAAAA;MAAA;MAAA;IAAA,GAAuB,QAAvB,EAAuB;MAAAA;MAAA;MAAA,OACbA,gDADa;IACW,CADlC;IAFFA;IAMAA;IACFA;IAKFA,gCAAyB,CAAzB,EAAyB,OAAzB,EAAyB,EAAzB,EAAyB,CAAzB,EAAyB,OAAzB,EAAyB,EAAzB;IAIMA;MAAAA;MAAA;MAAA;IAAA,GAA4B,QAA5B,EAA4B;MAAAA;MAAA;MAAA,OAClBA,gDADkB;IACM,CADlC;IAFFA;IAMAA;IACFA;IAIFA;IAkEAA;IA4FAA,iCAAyB,EAAzB,EAAyB,OAAzB,EAAyB,EAAzB,EAAyB,EAAzB,EAAyB,OAAzB,EAAyB,EAAzB;IAIMA;MAAAA;MAAA;MAAA;IAAA,GAA4B,QAA5B,EAA4B;MAAAA;MAAA;MAAA,OAClBA,gDADkB;IACM,CADlC;IAFFA;IAMAA;IACFA;IAIFA,iCAAgD,EAAhD,EAAgD,OAAhD,EAAgD,EAAhD,EAAgD,EAAhD,EAAgD,OAAhD,EAAgD,EAAhD;IAIMA;MAAAA;MAAA;MAAA;IAAA,GAA6B,QAA7B,EAA6B;MAAAA;MAAA;MAAA,OACnBA,iDADmB;IACM,CADnC;IAFFA;IAMAA;IACFA;IAIFA;IAWAA;IAOFA;;;;;IAjOQA;IAAAA,2CAAuB,UAAvB,EAAuBK,mBAAvB;IAcAL;IAAAA,gDAA4B,UAA5B,EAA4BK,mBAA5B;IASAL;IAAAA;IAkEAA;IAAAA;IAgGAA;IAAAA,gDAA4B,UAA5B,EAA4BK,mBAA5B;IAaAL;IAAAA,iDAA6B,UAA7B,EAA6BK,mBAA7B;IASAL;IAAAA;IAYHA;IAAAA;;;;;;IAYHA;IACEA;IACFA;;;;;;IAEAA;IACEA;IAAUA;IAAQA;IAAqBA;IACvCA;IAAwBA;IAA8CA;IACtEA;IAAwBA;IAAkCA;;;;;IAFxCA;IAAAA;IACMA;IAAAA;IACAA;IAAAA;;;;;;IAG1BA;IACEA;IAAWA;IAAQA;IAAsBA;IAASA;IACpDA;;;;;IADqBA;IAAAA;;;;ADvRzB,OAAM,MAAOM,qBAAP,CAA4B;EA8BhCC,YACUC,UADV,EAEoCC,UAFpC,EAEgE;IADtD;IAC0B,6BAA4B,CA/BhE;;IACU,iBAAY,IAAIX,YAAJ,EAAZ;IACA,eAAU,IAAIA,YAAJ,EAAV;IACA,mBAAc,IAAIA,YAAJ,EAAd;IACA,uBAAkB,IAAIA,YAAJ,EAAlB,CA2BsD,CAzBhE;;IACA,oBAA4B,IAA5B;IACA,oBAAe,KAAf;IACA,iBAAY,IAAZ,CAsBgE,CAtB/C;;IACjB,sBAAiB,IAAjB,CAqBgE,CArB1C;;IACtB,yBAAoB,GAApB;IACA,uBAAkB,IAAlB;IACA,4BAAuB,SAAvB,CAkBgE,CAlB/B;;IACjC,iBAAY,EAAZ;IACA,iBAAY,EAAZ;IACA,wBAAmB,OAAnB;IACA,2BAAsB,MAAtB;IACA,sBAAiB,IAAjB;IACA,gBAAiC,IAAjC;IAEA,kBAAa,CAAb;IACA,0BAAqB,CAArB;IACA,oBAAyD,CACvD;MAAEY,KAAK,EAAE,CAAT;MAAYC,MAAM,EAAE;IAApB,CADuD,EAEvD;MAAED,KAAK,EAAE,EAAT;MAAaC,MAAM,EAAE;IAArB,CAFuD,EAGvD;MAAED,KAAK,EAAE,EAAT;MAAaC,MAAM,EAAE;IAArB,CAHuD,CAAzD,CAQgE,CAGhE;;IACA,wBAAmB,CACjB;MAAEC,KAAK,EAAE,GAAT;MAAcC,KAAK,EAAE;IAArB,CADiB,EAEjB;MAAED,KAAK,EAAE,GAAT;MAAcC,KAAK,EAAE;IAArB,CAFiB,EAGjB;MAAED,KAAK,EAAE,GAAT;MAAcC,KAAK,EAAE;IAArB,CAHiB,EAIjB;MAAED,KAAK,EAAE,GAAT;MAAcC,KAAK,EAAE;IAArB,CAJiB,EAKjB;MAAED,KAAK,EAAE,IAAT;MAAeC,KAAK,EAAE;IAAtB,CALiB,EAMjB;MAAED,KAAK,EAAE,GAAT;MAAcC,KAAK,EAAE;IAArB,CANiB,EAOjB;MAAED,KAAK,EAAE,GAAT;MAAcC,KAAK,EAAE;IAArB,CAPiB,CAAnB,CAJgE,CAchE;;IACA,2BAAsB,CACpB;MAAED,KAAK,EAAE,SAAT;MAAoBC,KAAK,EAAE;IAA3B,CADoB,EAEpB;MAAED,KAAK,EAAE,iBAAT;MAA4BC,KAAK,EAAE;IAAnC,CAFoB,EAGpB;MAAED,KAAK,EAAE,MAAT;MAAiBC,KAAK,EAAE;IAAxB,CAHoB,EAIpB;MAAED,KAAK,EAAE,GAAT;MAAcC,KAAK,EAAE;IAArB,CAJoB,EAKpB;MAAED,KAAK,EAAE,GAAT;MAAcC,KAAK,EAAE;IAArB,CALoB,EAMpB;MAAED,KAAK,EAAE,GAAT;MAAcC,KAAK,EAAE;IAArB,CANoB,EAOpB;MAAED,KAAK,EAAE,GAAT;MAAcC,KAAK,EAAE;IAArB,CAPoB,EAQpB;MAAED,KAAK,EAAE,IAAT;MAAeC,KAAK,EAAE;IAAtB,CARoB,EASpB;MAAED,KAAK,EAAE,GAAT;MAAcC,KAAK,EAAE;IAArB,CAToB,EAUpB;MAAED,KAAK,EAAE,GAAT;MAAcC,KAAK,EAAE;IAArB,CAVoB,CAAtB,CAfgE,CA2BhE;;IACA,uBAAkB,CAChB;MAAED,KAAK,EAAE,OAAT;MAAkBC,KAAK,EAAE;IAAzB,CADgB,EAEhB;MAAED,KAAK,EAAE,WAAT;MAAsBC,KAAK,EAAE;IAA7B,CAFgB,EAGhB;MAAED,KAAK,EAAE,cAAT;MAAyBC,KAAK,EAAE;IAAhC,CAHgB,EAIhB;MAAED,KAAK,EAAE,YAAT;MAAuBC,KAAK,EAAE;IAA9B,CAJgB,CAAlB,CA5BgE,CAmChE;;IACA,oBAAe,CACb;MAAED,KAAK,EAAE,MAAT;MAAiBC,KAAK,EAAE;IAAxB,CADa,EAEb;MAAED,KAAK,EAAE,QAAT;MAAmBC,KAAK,EAAE;IAA1B,CAFa,EAGb;MAAED,KAAK,EAAE,QAAT;MAAmBC,KAAK,EAAE;IAA1B,CAHa,CAAf;EAnCI;;EAyCkB,IAAlBC,kBAAkB;IACpB,OAAO,KAAKC,SAAL,CAAeC,IAAf,OAA0B,EAA1B,IAAgC,KAAKC,SAAL,CAAeD,IAAf,OAA0B,EAAjE;EACD;;EAEiB,IAAdE,cAAc;IAChB,QAAQ,KAAKC,mBAAb;MACE,KAAK,QAAL;QACE,OAAO,GAAP;;MACF,KAAK,QAAL;QACE,OAAO,GAAP;;MACF,KAAK,MAAL;MACA;QACE,OAAO,EAAP;IAPJ;EASD,CAxF+B,CAyFhC;;;EAC0B,IAAtBC,sBAAsB;IACxB,OAAO,KAAKD,mBAAL,KAA6B,MAApC;EACD;EAED;;;;;;EAIME,YAAY,CAACC,KAAD,EAAW;IAAA;;IAAA;MAC3B,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;;MAEA,IAAIA,KAAK,IAAIA,KAAK,CAACZ,MAAN,GAAe,CAA5B,EAA+B;QAC7B,MAAMc,IAAI,GAAGF,KAAK,CAAC,CAAD,CAAlB;QACA,KAAI,CAACG,YAAL,GAAoBD,IAApB;QACA,KAAI,CAACE,QAAL,GAAgB,IAAhB;MAED;IAR0B;EAS5B;;EAEDC,UAAU;IACR,OAAO;MACLC,SAAS,EAAE,KAAKA,SADX;MAELC,cAAc,EAAE,KAAKA,cAFhB;MAGLC,iBAAiB,EAAE,KAAKA,iBAHnB;MAILC,eAAe,EAAE,KAAKA,eAJjB;MAKLC,oBAAoB,EAAE,KAAKA,oBALtB;MAMLlB,SAAS,EAAE,KAAKA,SANX;MAOLE,SAAS,EAAE,KAAKA,SAPX;MAQLiB,gBAAgB,EAAE,KAAKA,gBARlB;MASLf,mBAAmB,EAAE,KAAKA,mBATrB;MAULgB,cAAc,EAAE,KAAKA;IAVhB,CAAP;EAYD;;EAEDC,aAAa;IACX,OAAO;MACLC,UAAU,EAAE,KAAKA,UADZ;MAELC,cAAc,EAAE,KAAKC,YAAL,CAAkBC,GAAlB,CAAuBC,MAAD,IAAYA,MAAM,CAAC/B,KAAzC,CAFX;MAGLgC,OAAO,EAAE,KAAKH,YAAL,CAAkBC,GAAlB,CAAuBC,MAAD,IAAYA,MAAM,CAAC9B,MAAzC,CAHJ;MAILkB,SAAS,EAAE,KAAKA,SAJX;MAKLC,cAAc,EAAE,KAAKA;IALhB,CAAP;EAOD;EAED;;;;;EAGAa,cAAc;IACZ,KAAKjB,YAAL,GAAoB,IAApB;IACA,KAAKC,QAAL,GAAgB,IAAhB;IACA,KAAKiB,YAAL,GAAoB,KAApB,CAHY,CAKZ;;IACA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAlB;;IACA,IAAIF,SAAJ,EAAe;MACbA,SAAS,CAACjC,KAAV,GAAkB,EAAlB;IACD,CATW,CAWZ;;;IACA,KAAKoC,WAAL,CAAiBC,IAAjB;EACD;EAED;;;;;EAGQC,WAAW;IACjB,MAAMC,OAAO,GAAe;MAC1BtB,SAAS,EAAE,KAAKA,SADU;MAE1BC,cAAc,EAAE,KAAKA,cAFK;MAG1BC,iBAAiB,EAAE,KAAKA,iBAHE;MAI1BC,eAAe,EAAE,KAAKA,eAJI;MAK1BC,oBAAoB,EAAE,KAAKA,oBALD;MAM1BlB,SAAS,EAAE,KAAKA,SANU;MAO1BE,SAAS,EAAE,KAAKA,SAPU;MAQ1BiB,gBAAgB,EAAE,KAAKA,gBARG;MAS1Bf,mBAAmB,EAAE,KAAKA,mBATA;MAU1BgB,cAAc,EAAE,KAAKA;IAVK,CAA5B;IAYA,KAAKiB,eAAL,CAAqBH,IAArB,CAA0BE,OAA1B;EACD,CAzK+B,CA0KhC;;;EACAE,aAAa,CAACC,KAAD,EAAc;IACzB,KAAKjB,UAAL,GAAkBiB,KAAlB,CADyB,CAEzB;;IACA,OAAO,KAAKf,YAAL,CAAkB5B,MAAlB,GAA2B2C,KAAlC,EAAyC;MACvC,MAAMC,UAAU,GAAG,KAAKhB,YAAL,CAAkB,KAAKA,YAAL,CAAkB5B,MAAlB,GAA2B,CAA7C,CAAnB;MACA,MAAM6C,QAAQ,GAAGD,UAAU,GAAGA,UAAU,CAAC7C,KAAX,GAAmB6C,UAAU,CAAC5C,MAAjC,GAA0C,CAArE;MACA,KAAK4B,YAAL,CAAkBkB,IAAlB,CAAuB;QAAE/C,KAAK,EAAE8C,QAAT;QAAmB7C,MAAM,EAAE;MAA3B,CAAvB;IACD;;IACD,OAAO,KAAK4B,YAAL,CAAkB5B,MAAlB,GAA2B2C,KAAlC,EAAyC;MACvC,KAAKf,YAAL,CAAkBmB,GAAlB;IACD,CAVwB,CAWzB;;;IACA,IAAI,KAAKC,kBAAL,IAA2BL,KAA/B,EAAsC;MACpC,KAAKK,kBAAL,GAA0BL,KAAK,GAAG,CAAlC;IACD;EACF;;EAEDM,kBAAkB;IAChB,KAAKP,aAAL,CAAmB,KAAKhB,UAAxB;EACD;;EAEDwB,mBAAmB,IACjB;IACA;EACD;;EAEDC,sBAAsB;IACpB,KAAKZ,WAAL;EACD;;EAEDa,sBAAsB;IACpB,KAAKb,WAAL;EACD;;EAEDc,iBAAiB;IACf,KAAKd,WAAL;EACD;;EAEDe,oBAAoB;IAClB,KAAKf,WAAL;EACD;;EAEDgB,iBAAiB;IACf,KAAKhB,WAAL;EACD;;EAEDiB,iBAAiB;IACf,KAAKjB,WAAL;EACD;;EAEDkB,uBAAuB;IACrB,KAAKjD,mBAAL,GAA2B,KAAKa,eAAL,GAAuB,QAAvB,GAAkC,MAA7D;IACA,KAAKkB,WAAL;EACD;;EAEDmB,mBAAmB;IACjB,KAAKrC,eAAL,GAAuB,KAAKb,mBAAL,KAA6B,QAApD;IACA,KAAK+B,WAAL;EACD;;EAEDoB,gBAAgB;IACd,KAAKpB,WAAL;EACD;;EAEDqB,sBAAsB;IACpB,KAAKrB,WAAL;EACD;;EAEKsB,WAAW;IAAA;;IAAA;MACf,IAAI,CAAC,MAAI,CAAC9C,YAAV,EAAwB;QACtB,MAAI,CAAC+C,OAAL,CAAaxB,IAAb,CAAkB,+CAAlB;;QACA;MACD;;MACD,IAAI,CAAC,MAAI,CAACtB,QAAV,EAAoB;QAClB,MAAI,CAAC8C,OAAL,CAAaxB,IAAb,CAAkB,8BAAlB;;QACA;MACD;;MAED,IAAI,MAAI,CAACL,YAAT,EAAuB;QACrB;MACD;;MAED,MAAI,CAACA,YAAL,GAAoB,IAApB;MACA8B,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6C,MAAI,CAAC/C,UAAL,EAA7C;;MAEA,IAAI;QACF,IAAIgD,UAAJ;;QAEA,IAAI,MAAI,CAACjD,QAAL,KAAkB,KAAtB,EAA6B;UAC3BiD,UAAU,SAAS,MAAI,CAACpE,UAAL,CAAgBqE,iBAAhB,CAAkC,MAAI,CAACnD,YAAvC,EAAqD,MAAI,CAACE,UAAL,EAArD,CAAnB;QACD,CAFD,MAEO,IAAI,MAAI,CAACD,QAAL,KAAkB,KAAtB,EAA6B;UAClC,MAAMmD,IAAI,SAAS,MAAI,CAACpD,YAAL,CAAkBoD,IAAlB,EAAnB;;UACA,MAAMC,MAAM,GAAG,MAAI,CAACtE,UAAL,CAAgBuE,OAAhB,CAAwBF,IAAxB,EAA8B,MAAI,CAAC1C,aAAL,EAA9B,CAAf;;UACAwC,UAAU,GAAG;YACXK,UAAU,EAAEC,MAAM,CAACC,IAAP,CAAYJ,MAAM,CAAC,CAAD,CAAN,IAAa,EAAzB,CADD;YAEXA,MAAM,EAAEA;UAFG,CAAb;QAID;;QAED,MAAI,CAACnC,YAAL,GAAoB,KAApB;QACA8B,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDC,UAAlD;;QACA,MAAI,CAACQ,SAAL,CAAenC,IAAf,CAAoB2B,UAApB;;QACA,MAAI,CAACxB,eAAL,CAAqBH,IAArB,CAA0B,MAAI,CAACrB,UAAL,EAA1B;MACD,CAlBD,CAkBE,OAAOyD,KAAP,EAAc;QACd,MAAI,CAACzC,YAAL,GAAoB,KAApB;QACA8B,OAAO,CAACW,KAAR,CAAc,oBAAd,EAAoCA,KAApC;;QACA,MAAI,CAACZ,OAAL,CAAaxB,IAAb,CAAkB,4BAA4BoC,KAA9C;MACD;IAvCc;EAwChB;;AAvR+B;;;mBAArB/E,uBAAqBN,mEAgCtBD,gBAhCsB;AAgCN;;;QAhCfO;EAAqBgF;EAAAC;IAAAH;IAAAX;IAAAzB;IAAAI;EAAA;EAAAoC;EAAAC;EAAAC;EAAAC;IAAA;MCTlC3F,+BAAyB,CAAzB,EAAyB,IAAzB;MACMA;MAAaA;MAGjBA,+BAAkC,CAAlC,EAAkC,OAAlC,EAAkC,CAAlC;MAMIA;QAAA,OAAU4F,wBAAV;MAA8B,CAA9B;MALF5F;MASFA;MA0BAA;MA4OAA;MACEA;MAIAA;MAMAA;MAGFA;;;;MAvRIA;MAAAA;MAGEA;MAAAA;MA0BAA;MAAAA;MA6OAA;MAAAA;MAIAA;MAAAA;MAMAA;MAAAA","names":["EventEmitter","TxtToJsonService","i0","ctx_r0","ctx_r13","ctx_r8","ctx_r9","ctx_r1","FileUploaderComponent","constructor","csvService","txtService","start","length","value","label","hasPrefixAndSuffix","rowPrefix","trim","rowSuffix","quoteCharacter","selectedQuoteOption","isQuoteHandlingEnabled","onFileSelect","event","files","target","file","selectedFile","fileType","getOptions","hasHeader","skipEmptyLines","selectedDelimiter","doubleQuoteWrap","selectedRowDelimiter","selectedEncoding","trimWhitespace","getTxtOptions","fieldCount","startPositions","fieldConfigs","map","config","lengths","clearSelection","isProcessing","fileInput","document","getElementById","onFileClear","emit","emitOptions","options","onOptionsChange","setFieldCount","count","lastConfig","newStart","push","pop","selectedFieldIndex","onFieldCountChange","onFieldConfigChange","onHeaderCheckboxChange","onSkipEmptyLinesChange","onDelimiterChange","onRowDelimiterChange","onRowPrefixChange","onRowSuffixChange","onDoubleQuoteWrapChange","onQuoteOptionChange","onEncodingChange","onTrimWhitespaceChange","processData","onError","console","log","jsonResult","convertFileToJson","text","result","convert","properties","Object","keys","onConvert","error","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ustaa\\Desktop\\converting-files-to-json-ccomb\\src\\app\\components\\file-uploader\\file-uploader.component.ts","C:\\Users\\ustaa\\Desktop\\converting-files-to-json-ccomb\\src\\app\\components\\file-uploader\\file-uploader.component.html"],"sourcesContent":["import { Component, EventEmitter, Inject, Output } from \"@angular/core\"\nimport { CsvConverterService, CsvOptions } from \"src/app/services/csv-converter.service\"\nimport { TxtToJsonService, TxtToJsonOptions } from \"src/app/services/txt-to-json.service\"\n\n@Component({\n  selector: \"app-file-uploader\",\n  templateUrl: \"./file-uploader.component.html\",\n  styleUrls: [\"./file-uploader.component.scss\"],\n})\nexport class FileUploaderComponent {\n  // Output events to communicate with parent component\n  @Output() onConvert = new EventEmitter<any>()\n  @Output() onError = new EventEmitter<string>()\n  @Output() onFileClear = new EventEmitter<void>()\n  @Output() onOptionsChange = new EventEmitter<any>()\n\n  // Track selected file and upload state\n  selectedFile: File | null = null\n  isProcessing = false\n  hasHeader = true // default to true\n  skipEmptyLines = true // default to true (skip empty lines)\n  selectedDelimiter = \",\"\n  doubleQuoteWrap = true\n  selectedRowDelimiter = \"newline\" // default to newline\n  rowPrefix = \"\"\n  rowSuffix = \"\"\n  selectedEncoding = \"utf-8\"\n  selectedQuoteOption = \"none\"\n  trimWhitespace = true\n  fileType: \"csv\" | \"txt\" | null = null\n\n  fieldCount = 3\n  selectedFieldIndex = 0\n  fieldConfigs: Array<{ start: number; length: number }> = [\n    { start: 0, length: 10 },\n    { start: 10, length: 10 },\n    { start: 20, length: 10 },\n  ]\n\n  constructor(\n    private csvService: CsvConverterService,\n    @Inject(TxtToJsonService) private txtService: TxtToJsonService,\n  ) {}\n\n  // Delimiter options for the dropdown\n  delimiterOptions = [\n    { value: \",\", label: \"Comma (,)\" },\n    { value: \";\", label: \"Semicolon (;)\" },\n    { value: \"|\", label: \"Pipe (|)\" },\n    { value: \":\", label: \"Colon (:)\" },\n    { value: \"\\t\", label: \"Tab\" },\n    { value: \"/\", label: \"Slash (/)\" },\n    { value: \"#\", label: \"Hash (#)\" },\n  ]\n\n  // Row delimiter options for the dropdown\n  rowDelimiterOptions = [\n    { value: \"newline\", label: \"Newline (\\\\n)\" },\n    { value: \"carriage-return\", label: \"Carriage Return(\\\\r)\" },\n    { value: \"crlf\", label: \"Carriage Return + Newline (\\\\r\\\\n)\" },\n    { value: \",\", label: \"Comma (,)\" },\n    { value: \";\", label: \"Semicolon (;)\" },\n    { value: \"|\", label: \"Pipe (|)\" },\n    { value: \":\", label: \"Colon (:)\" },\n    { value: \"\\t\", label: \"Tab\" },\n    { value: \"/\", label: \"Slash (/)\" },\n    { value: \"#\", label: \"Hash (#)\" },\n  ]\n  // Encoding options for the dropdown\n  encodingOptions = [\n    { value: \"utf-8\", label: \"UTF-8\" },\n    { value: \"utf-8-bom\", label: \"UTF-8 with BOM\" },\n    { value: \"windows-1254\", label: \"Windows-1254 (Turkish)\" },\n    { value: \"iso-8859-9\", label: \"ISO-8859-9 (Turkish)\" },\n  ]\n\n  // Quote handling options\n  quoteOptions = [\n    { value: \"none\", label: \"None (No Quote Handling)\" },\n    { value: \"single\", label: \"Single Quote (')\" },\n    { value: \"double\", label: 'Double Quote (\")' },\n  ]\n\n  get hasPrefixAndSuffix(): boolean {\n    return this.rowPrefix.trim() !== \"\" && this.rowSuffix.trim() !== \"\"\n  }\n\n  get quoteCharacter(): string {\n    switch (this.selectedQuoteOption) {\n      case \"single\":\n        return \"'\"\n      case \"double\":\n        return '\"'\n      case \"none\":\n      default:\n        return \"\"\n    }\n  }\n  //quote handling enabled mı değil mi\n  get isQuoteHandlingEnabled(): boolean {\n    return this.selectedQuoteOption !== \"none\"\n  }\n\n  /**\n   * Handles file selection and conversion\n   * @param event - File input change event\n   */\n  async onFileSelect(event: any): Promise<void> {\n    const files = event.target.files\n\n    if (files && files.length > 0) {\n      const file = files[0]\n      this.selectedFile = file\n      this.fileType = null;\n\n    }\n  }\n\n  getOptions(): CsvOptions {\n    return {\n      hasHeader: this.hasHeader,\n      skipEmptyLines: this.skipEmptyLines,\n      selectedDelimiter: this.selectedDelimiter,\n      doubleQuoteWrap: this.doubleQuoteWrap,\n      selectedRowDelimiter: this.selectedRowDelimiter,\n      rowPrefix: this.rowPrefix,\n      rowSuffix: this.rowSuffix,\n      selectedEncoding: this.selectedEncoding,\n      selectedQuoteOption: this.selectedQuoteOption,\n      trimWhitespace: this.trimWhitespace,\n    }\n  }\n\n  getTxtOptions(): TxtToJsonOptions {\n    return {\n      fieldCount: this.fieldCount,\n      startPositions: this.fieldConfigs.map((config) => config.start),\n      lengths: this.fieldConfigs.map((config) => config.length),\n      hasHeader: this.hasHeader,\n      skipEmptyLines: this.skipEmptyLines,\n    }\n  }\n\n  /**\n   * Clears the selected file and resets the input\n   */\n  clearSelection(): void {\n    this.selectedFile = null\n    this.fileType = null\n    this.isProcessing = false\n\n    // Reset the file input\n    const fileInput = document.getElementById(\"csvFileInput\") as HTMLInputElement\n    if (fileInput) {\n      fileInput.value = \"\"\n    }\n\n    // Emit clear event to parent component\n    this.onFileClear.emit()\n  }\n\n  /**\n   * Emits the current options to parent component\n   */\n  private emitOptions(): void {\n    const options: CsvOptions = {\n      hasHeader: this.hasHeader,\n      skipEmptyLines: this.skipEmptyLines,\n      selectedDelimiter: this.selectedDelimiter,\n      doubleQuoteWrap: this.doubleQuoteWrap,\n      selectedRowDelimiter: this.selectedRowDelimiter,\n      rowPrefix: this.rowPrefix,\n      rowSuffix: this.rowSuffix,\n      selectedEncoding: this.selectedEncoding,\n      selectedQuoteOption: this.selectedQuoteOption,\n      trimWhitespace: this.trimWhitespace,\n    }\n    this.onOptionsChange.emit(options)\n  }\n  // TXT-specific methods\n  setFieldCount(count: number): void {\n    this.fieldCount = count\n    // Adjust fieldConfigs array to match the new count\n    while (this.fieldConfigs.length < count) {\n      const lastConfig = this.fieldConfigs[this.fieldConfigs.length - 1]\n      const newStart = lastConfig ? lastConfig.start + lastConfig.length : 0\n      this.fieldConfigs.push({ start: newStart, length: 10 })\n    }\n    while (this.fieldConfigs.length > count) {\n      this.fieldConfigs.pop()\n    }\n    // Reset selected field index if it's out of bounds\n    if (this.selectedFieldIndex >= count) {\n      this.selectedFieldIndex = count - 1\n    }\n  }\n\n  onFieldCountChange(): void {\n    this.setFieldCount(this.fieldCount)\n  }\n\n  onFieldConfigChange(): void {\n    // This method can be called when field configurations change\n    // You can add any additional logic here if needed\n  }\n\n  onHeaderCheckboxChange(): void {\n    this.emitOptions()\n  }\n\n  onSkipEmptyLinesChange(): void {\n    this.emitOptions()\n  }\n\n  onDelimiterChange(): void {\n    this.emitOptions()\n  }\n\n  onRowDelimiterChange(): void {\n    this.emitOptions()\n  }\n\n  onRowPrefixChange(): void {\n    this.emitOptions()\n  }\n\n  onRowSuffixChange(): void {\n    this.emitOptions()\n  }\n\n  onDoubleQuoteWrapChange(): void {\n    this.selectedQuoteOption = this.doubleQuoteWrap ? \"double\" : \"none\"\n    this.emitOptions()\n  }\n\n  onQuoteOptionChange(): void {\n    this.doubleQuoteWrap = this.selectedQuoteOption === \"double\"\n    this.emitOptions()\n  }\n\n  onEncodingChange(): void {\n    this.emitOptions()\n  }\n\n  onTrimWhitespaceChange(): void {\n    this.emitOptions()\n  }\n\n  async processData(): Promise<void> {\n    if (!this.selectedFile) {\n      this.onError.emit(\"No file selected. Please select a file first.\")\n      return\n    }\n    if (!this.fileType) {\n      this.onError.emit(\"Please select the file type.\");\n      return;\n    }\n\n    if (this.isProcessing) {\n      return\n    }\n\n    this.isProcessing = true\n    console.log(\"Processing data with options:\", this.getOptions())\n\n    try {\n      let jsonResult: any\n\n      if (this.fileType === \"csv\") {\n        jsonResult = await this.csvService.convertFileToJson(this.selectedFile, this.getOptions())\n      } else if (this.fileType === \"txt\") {\n        const text = await this.selectedFile.text()\n        const result = this.txtService.convert(text, this.getTxtOptions() )\n        jsonResult = {\n          properties: Object.keys(result[0] || {}),\n          result: result,\n        }\n      }\n\n      this.isProcessing = false\n      console.log(\"Processing completed successfully:\", jsonResult)\n      this.onConvert.emit(jsonResult)\n      this.onOptionsChange.emit(this.getOptions())\n    } catch (error) {\n      this.isProcessing = false\n      console.error(\"Processing failed:\", error)\n      this.onError.emit(\"Error processing file: \" + error)\n    }\n  }\n\n  \n}\n","<div class=\"file-upload\">\n  <h3>Upload a File</h3>\n  \n  <!-- File Input Section -->\n  <div class=\"file-input-container\">\n    <input \n      id=\"csvFileInput\"\n      type=\"file\" \n      accept=\".csv,.txt,.xml\" \n      class=\"form-control\"\n      (change)=\"onFileSelect($event)\"\n      [disabled]=\"isProcessing\">\n\n  <!-- File Type Selection -->\n  <div *ngIf=\"selectedFile\" class=\"file-type-selection\">\n    <h4>Select File Type</h4>\n    <label>\n      <input\n        type=\"radio\"\n        name=\"fileType\"\n        value=\"csv\"\n        [(ngModel)]=\"fileType\"\n        [disabled]=\"isProcessing\"\n      />\n      CSV\n    </label>\n    <label>\n      <input\n        type=\"radio\"\n        name=\"fileType\"\n        value=\"txt\"\n        [(ngModel)]=\"fileType\"\n        [disabled]=\"isProcessing\"\n      />\n      TXT\n    </label>\n  </div>\n\n    \n  <!-- Options section - shown when file is selected -->\n  <div *ngIf=\"selectedFile\" class=\"options-section\">\n    <!-- Header checkbox -->\n    <div class=\"option-item\">\n      <label class=\"option-label\">\n        <input \n          type=\"checkbox\" \n          [(ngModel)]=\"hasHeader\" \n          (change)=\"onHeaderCheckboxChange()\" \n          [disabled]=\"isProcessing\"\n          class=\"option-checkbox\">  \n        File has a header line\n      </label>\n    </div>\n\n     \n    <!-- Skip empty lines checkbox -->\n    <div class=\"option-item\">\n      <label class=\"option-label\">\n        <input \n          type=\"checkbox\" \n          [(ngModel)]=\"skipEmptyLines\" \n          (change)=\"onSkipEmptyLinesChange()\" \n          [disabled]=\"isProcessing\"\n          class=\"option-checkbox\"> \n        Skip empty lines\n      </label>\n    </div>\n\n    <!-- TXT-specific options - only show for TXT files -->\n    <div *ngIf=\"fileType === 'txt'\" class=\"txt-options\">\n      <!-- Field Count -->\n      <div class=\"option-item\">\n        <label class=\"option-label\">\n          <span class=\"option-text\">Field Count:</span>\n          <input \n            type=\"number\" \n            [(ngModel)]=\"fieldCount\" \n            (input)=\"onFieldCountChange()\" \n            [disabled]=\"isProcessing\"\n            class=\"number-input\"\n            min=\"1\"\n            max=\"50\">\n        </label>\n      </div>\n\n      <!-- Field Selection -->\n      <div class=\"option-item\">\n        <label class=\"option-label\">\n          <span class=\"option-text\">Field Select:</span>\n          <select \n            [(ngModel)]=\"selectedFieldIndex\" \n            [disabled]=\"isProcessing\"\n            class=\"delimiter-select\">\n            <option *ngFor=\"let field of fieldConfigs; let i = index\" [value]=\"i\">\n              Field {{ i + 1 }}\n            </option>\n          </select>\n        </label>\n      </div>\n\n      <!-- Field Configuration -->\n      <div class=\"field-settings\" *ngIf=\"fieldConfigs[selectedFieldIndex]\">\n        <h4>Field {{ (+selectedFieldIndex) + 1 }} Settings</h4>\n        \n        <div class=\"field-config-row\">\n          <div class=\"field-config-item\">\n            <label class=\"option-label\">\n              <span class=\"option-text\">Start Position:</span>\n              <input \n                type=\"number\" \n                [(ngModel)]=\"fieldConfigs[selectedFieldIndex].start\" \n                (input)=\"onFieldConfigChange()\" \n                [disabled]=\"isProcessing\"\n                class=\"number-input\"\n                min=\"0\">\n            </label>\n          </div>\n          \n          <div class=\"field-config-item\">\n            <label class=\"option-label\">\n              <span class=\"option-text\">Character Length:</span>\n              <input \n                type=\"number\" \n                [(ngModel)]=\"fieldConfigs[selectedFieldIndex].length\" \n                (input)=\"onFieldConfigChange()\" \n                [disabled]=\"isProcessing\"\n                class=\"number-input\"\n                min=\"1\">\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- CSV-specific options - only show for CSV files -->\n    <div *ngIf=\"fileType === 'csv'\">\n      <!-- Value Delimiter selection dropdown -->\n      <div class=\"option-item\">\n        <label class=\"option-label\">\n          <span class=\"option-text\">Value Delimiter:</span>\n          <select \n            [(ngModel)]=\"selectedDelimiter\" \n            (change)=\"onDelimiterChange()\" \n            [disabled]=\"isProcessing\"\n            class=\"delimiter-select\">\n            <option *ngFor=\"let option of delimiterOptions\" [value]=\"option.value\">\n              {{option.label}}\n            </option>\n          </select>\n        </label>\n      </div>\n\n      <!-- Row Delimiter selection dropdown -->\n      <div class=\"option-item\">\n        <label class=\"option-label\">\n          <span class=\"option-text\">Row Delimiter:</span>\n          <select \n            [(ngModel)]=\"selectedRowDelimiter\" \n            (change)=\"onRowDelimiterChange()\" \n            [disabled]=\"isProcessing\"\n            class=\"delimiter-select\">\n            <option *ngFor=\"let option of rowDelimiterOptions\" [value]=\"option.value\">\n              {{option.label}}\n            </option>\n          </select>\n        </label>\n      </div>\n\n      <!-- Quote Handling selection dropdown -->\n      <div class=\"option-item\">\n        <label class=\"option-label\">\n          <span class=\"option-text\">Quote Handling:</span>\n          <select \n            [(ngModel)]=\"selectedQuoteOption\" \n            (change)=\"onQuoteOptionChange()\" \n            [disabled]=\"isProcessing\"\n            class=\"delimiter-select\">\n            <option *ngFor=\"let option of quoteOptions\" [value]=\"option.value\">\n              {{option.label}}\n            </option>\n          </select>\n        </label>\n      </div>\n\n      <!-- Encoding selection dropdown -->\n      <div class=\"option-item\">\n        <label class=\"option-label\">\n          <span class=\"option-text\">File Encoding:</span>\n          <select \n            [(ngModel)]=\"selectedEncoding\" \n            (change)=\"onEncodingChange()\" \n            [disabled]=\"isProcessing\"\n            class=\"delimiter-select\">\n            <option *ngFor=\"let option of encodingOptions\" [value]=\"option.value\">\n              {{option.label}}\n            </option>\n          </select>\n        </label>\n      </div>\n\n      <!-- Row Prefix/Suffix inputs -->\n      <div class=\"option-item\">\n        <label class=\"option-label\">\n          <span class=\"option-text\">Row Prefix:</span>\n          <input \n            type=\"text\" \n            [(ngModel)]=\"rowPrefix\" \n            (input)=\"onRowPrefixChange()\" \n            [disabled]=\"isProcessing\"\n            class=\"prefix-suffix-input\">\n        </label>\n      </div>\n      \n      <div class=\"option-item\">\n        <label class=\"option-label\">\n          <span class=\"option-text\">Row Suffix:</span>\n          <input \n            type=\"text\" \n            [(ngModel)]=\"rowSuffix\" \n            (input)=\"onRowSuffixChange()\" \n            [disabled]=\"isProcessing\"\n            class=\"prefix-suffix-input\">\n        </label>\n      </div>\n    </div>\n\n    <!-- Trim whitespace checkbox - show for both file types -->\n    <div class=\"option-item\">\n      <label class=\"option-label\">\n        <input \n          type=\"checkbox\" \n          [(ngModel)]=\"trimWhitespace\" \n          (change)=\"onTrimWhitespaceChange()\" \n          [disabled]=\"isProcessing\"\n          class=\"option-checkbox\"> \n        Trim whitespace from values\n      </label>\n    </div>\n\n    <!-- Double quote wrap checkbox -->\n    <div class=\"option-item\" style=\"display: none;\">\n      <label class=\"option-label\">\n        <input \n          type=\"checkbox\" \n          [(ngModel)]=\"doubleQuoteWrap\" \n          (change)=\"onDoubleQuoteWrapChange()\" \n          [disabled]=\"isProcessing\"\n          class=\"option-checkbox\"> \n        Double Quote Wrap\n      </label>\n    </div>\n\n    <!-- Process Data Button - At the very end of all options -->\n    <div *ngIf=\"selectedFile && !isProcessing\" class=\"process-button-container\">\n      <button \n        class=\"btn btn-primary process-btn\"\n        (click)=\"processData()\"\n        title=\"Process the file with current settings\">\n        Process Data\n      </button>\n    </div>\n  \n  \n    <!-- Cancel Button - shown when file is selected -->\n    <button \n      *ngIf=\"selectedFile && !isProcessing\" \n      class=\"cancel-btn\"\n      (click)=\"clearSelection()\"\n      title=\"Remove selected file and clear data\">\n      ✕\n    </button>\n  </div>\n\n\n  \n  <!-- File Status Display -->\n  <div class=\"file-status\">\n    <p *ngIf=\"!selectedFile && !isProcessing\" class=\"help-text\">\n      Select a file to upload\n    </p>\n    \n    <p *ngIf=\"selectedFile && !isProcessing\" class=\"selected-file\">\n      Selected: <strong>{{selectedFile.name}}</strong> \n      <span class=\"file-size\">({{(selectedFile.size / 1024).toFixed(1)}} KB)</span>\n      <span class=\"file-type\">- {{fileType?.toUpperCase()}} file</span>\n    </p>\n    \n    <p *ngIf=\"isProcessing\" class=\"processing\">\n      Processing <strong>{{selectedFile?.name}}</strong>...\n    </p>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}